# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  language:
    strict-inference: true
    strict-raw-types: true
  errors:
    dead_code: info
    invalid_annotation_target: ignore
  exclude:
    - "**/*.g.dart"
    - "**/*.gr.dart"
    - "**/*.mapping.dart"
    - "**/*.chopper.dart"
    - "**/*.freezed.dart"
    - "**/**.swagger.dart"
    - "**/**.gen.dart"
    - "**/generated_icons.dart"
    - "**/firebase_options.dart"
    - ".project/"

formatter:
  page_width: 100
  trailing_commas: preserve

linter:
  rules:
    unawaited_futures: true
    always_put_required_named_parameters_first: false
    avoid_bool_literals_in_conditional_expressions: true
    avoid_escaping_inner_quotes: true
    avoid_positional_boolean_parameters: true
    avoid_types_on_closure_parameters: true
    avoid_unused_constructor_parameters: true
    literal_only_boolean_expressions: true
    only_throw_errors: true
    parameter_assignments: true
    prefer_asserts_in_initializer_lists: true
    prefer_const_constructors: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    prefer_constructors_over_static_methods: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_if_elements_to_conditional_expressions: true
    sort_pub_dependencies: false
    sort_unnamed_constructors_first: true
    type_annotate_public_apis: true
    unnecessary_await_in_return: true
    unnecessary_lambdas: true
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    use_is_even_rather_than_modulo: true
    use_raw_strings: true
    use_setters_to_change_properties: true
    avoid_private_typedef_functions: true
    avoid_setters_without_getters: false
    cancel_subscriptions: true
    close_sinks: true
    test_types_in_equals: true
    unnecessary_statements: true
    avoid_void_async: true
    always_declare_return_types: true
    avoid_null_checks_in_equality_operators: true
    avoid_types_as_parameter_names: false
    library_names: true
    omit_local_variable_types: true
    prefer_single_quotes: true
    prefer_typing_uninitialized_variables: true